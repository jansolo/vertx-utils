apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'

archivesBaseName = rootProject.libname
sourceCompatibility = 1.7
version = rootProject.version
group = rootProject.owner

defaultTasks = ['assemble']

// This sets up the classpath for the script itself
buildscript {

    repositories {
        mavenLocal()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        mavenCentral()
    }

    dependencies {
        classpath "io.vertx:vertx-core:$vertxVersion"
        classpath "io.vertx:vertx-platform:$vertxVersion"
        classpath "io.vertx:vertx-hazelcast:$vertxVersion"
        classpath files(['src/main/resources'])
    }
}

configurations {
    provided
    testCompile.extendsFrom provided
}

sourceSets {
    main {
        compileClasspath = compileClasspath + configurations.provided
    }
}

repositories {
    mavenLocal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    mavenCentral()
}

dependencies {
    provided "io.vertx:vertx-core:$vertxVersion"
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task sourceJar(type: Jar) {
    description = 'Builds a source jar artifact suitable for maven deployment.'
    classifier = 'sources'
    from sourceSets.main.java
}

task javadocJar(type: Jar) {
    description = 'Builds a javadoc jar artifact suitable for maven deployment.'
    classifier = 'javadoc'
    from javadoc.destinationDir
}
javadocJar.dependsOn javadoc

build.dependsOn sourceJar, javadocJar

artifacts {
    archives sourceJar, javadocJar
}

uploadArchives {
    group 'build'
    description = "Does a maven deploy of archives artifacts"

    repositories {
        mavenDeployer {
            configuration = configurations.archives
            configurePom(pom)
        }
    }
}

/*
If you're uploading stuff to Maven, Gradle needs to generate a POM.
Please edit the details below.
 */
def configurePom(def pom) {
    pom.project {
        name rootProject.name
        description rootProject.description
        inceptionYear '2014'
        packaging 'jar'

        url 'https://github.com/jansolo/vertx-utils'

        developers {
            developer {
                id rootProject.owner
                name 'Jan Illetschko'
                email 'jan.illetschko@3kraft.com'
            }
        }

        scm {
            url 'https://github.com/jansolo/vertx-utils'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        properties {
            setProperty('project.build.sourceEncoding', 'UTF8')
        }
    }
}

// Map the 'provided' dependency configuration to the appropriate IDEA visibility scopes.
plugins.withType(IdeaPlugin) {
    idea {
        module {
            scopes.PROVIDED.plus += configurations.provided
            scopes.COMPILE.minus += configurations.provided
            scopes.TEST.minus += configurations.provided
            scopes.RUNTIME.minus += configurations.provided
        }
    }
}
